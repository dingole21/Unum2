
Comprehensive fused multiply add on the 4-bit PTile.

a = PTile4(0b0010) #0.5
b = PTile4(0b0100) #1.0
c = PTile4(0b0110) #2.0

# fused-multiply add

(a * a) + a == PTile4(0b0011)
(a * a) + b == PTile4(0b0101)
(a * a) + c == PTile4(0b0111)

(a * b) + a == one(PTile4)
(a * b) + b == PTile4(0b0101)
(a * b) + c == PTile4(0b0111)

(a * c) + a == PTile4(0b0101)
(a * c) + b == PTile4(0b0110)
(a * c) + c == PTile4(0b0111)

(b * a) + a == one(PTile4)
(b * a) + b == PTile4(0b0101)
(b * a) + c == PTile4(0b0111)

(b * b) + a == PTile4(0b0101)
(b * b) + b == PTile4(0b0110)
(b * b) + c == PTile4(0b0111)

(b * c) + a == PTile4(0b0111)
(b * c) + b == PTile4(0b0111)
(b * c) + c == PTile4(0b0111)

(c * a) + a == PTile4(0b0101)
(c * a) + b == PTile4(0b0110)
(c * a) + c == PTile4(0b0111)

(c * b) + a == PTile4(0b0111)
(c * b) + b == PTile4(0b0111)
(c * b) + c == PTile4(0b0111)

(c * c) + a == PTile4(0b0111)
(c * c) + b == PTile4(0b0111)
(c * c) + c == PTile4(0b0111)

# fused-multiply subtract
(a * a) - a == PTile4(0b1111)
(a * a) - b == PTile4(0b1101)
(a * a) - c == PTile4(0b1011)

(a * b) - a == zero(PTile4)
(a * b) - b == PTile4(0b1110)
(a * b) - c == PTile4(0b1011)

(a * c) - a == PTile4(0b0010)
(a * c) - b == zero(PTile4)
(a * c) - c == -one(PTile4)

(b * a) - a == zero(PTile4)
(b * a) - b == PTile4(0b1110)
(b * a) - c == PTile4(0b1011)

(b * b) - a == PTile4(0b0010)
(b * b) - b == zero(PTile4)
(b * b) - c == -one(PTile4)

(b * c) - a == PTile4(0b0101)
(b * c) - b == one(PTile4)
(b * c) - c == zero(PTile4)

(c * a) - a == PTile4(0b0010)
(c * a) - b == zero(PTile4)
(c * a) - c == -one(PTile4)

(c * b) - a == PTile4(0b0101)
(c * b) - b == one(PTile4)
(c * b) - c == zero(PTile4)

(c * c) - a == PTile4(0b0101) → PTile4(0b0111)
(c * c) - b == PTile4(0b0101) → PTile4(0b0111)
(c * c) - c == PTile4(0b0001) → PTile4(0b0111)

(c - a/c) * c == PTile4(0b0111)
(c - b/c) * c == PTile4(0b0111)
(c - c/c) * c == PTile4(0b0110)
